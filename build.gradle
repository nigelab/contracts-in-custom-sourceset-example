import org.springframework.cloud.contract.verifier.config.TestFramework

buildscript {
    ext {
        springCloudContractVersion = '3.1.8'
    }
}
plugins {
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.springframework.cloud.contract" version "${springCloudContractVersion}"
    id 'org.unbroken-dome.test-sets' version '4.0.0'
    id "io.freefair.lombok" version "8.4"
    id 'java'
}

group = 'pl.dziedziul'
version = '0.2.3-SNAPSHOT'
sourceCompatibility = 17

repositories {
    mavenCentral()
}

testSets {
    integrationTest { dirName = 'integration-test' }
}

configurations {
    contractTestImplementation.extendsFrom integrationTestImplementation
    contractTestRuntimeOnly.extendsFrom integrationTestRuntimeOnly
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.junit.jupiter:junit-jupiter'

    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation platform("org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudContractVersion}")
    integrationTestImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'

    contractTestImplementation(sourceSets.integrationTest.output) {
        because 'contract test can not access the bast test class in the source set other than default test'
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

integrationTest.shouldRunAfter test
check.dependsOn integrationTest

contracts {
    testFramework = TestFramework.JUNIT5
    sourceSet = 'integrationTest'
    baseClassForTests = 'pl.dziedziul.contractsincustomsourceset.ContractSpringTestBase'
    baseClassMappings {
        baseClassMapping('.*/mvc/.*', 'pl.dziedziul.contractsincustomsourceset.ContractTestBase')
    }
    contractsDslDir = file("${project.rootDir}/src/integration-test/resources/contracts")
}


